#include <stdio.h>
#include <dirent.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>
#include <unistd.h>

#define PROC_DIR "/proc"
#define CMDLINE_FILE "/cmdline"
#define STAT_FILE "/stat"

int is_numeric(const char *str){
    for(int i=0;str[i]!='\0';i++){
        if(!isdigit(str[i])){
            return 0;
        }
    }
    return 1;
}

void get_process_name(char *stat_path,char *name){
    FILE *file=fopen(stat_path,"r");
    if(file){
        fscanf(file,"%*d (%[^)])",name);
        fclose(file);
    }
	else{
        strcpy(name,"(desconocido)");
    }
}

int main(){
    DIR *dir;
    struct dirent *entry;

    if((dir=opendir(PROC_DIR))==NULL){
        perror("No se pudo abrir /proc");
        return 1;
    }

    while((entry=readdir(dir))!=NULL){
        if(entry->d_type==DT_DIR && is_numeric(entry->d_name)){

            char cmdline_path[256];
            char stat_path[256];
            snprintf(cmdline_path,sizeof(cmdline_path),"%s/%s%s",PROC_DIR,entry->d_name,CMDLINE_FILE);
            snprintf(stat_path,sizeof(stat_path),"%s/%s%s",PROC_DIR,entry->d_name,STAT_FILE);

            FILE *cmdline_file=fopen(cmdline_path,"r");
            if(cmdline_file){
                char cmdline[256];
                size_t length=fread(cmdline,1,sizeof(cmdline),cmdline_file);
                fclose(cmdline_file);

                char process_name[256];
                get_process_name(stat_path,process_name);

                if(length==0){
                    printf("[%s] %s ---PROCESO DE KERNEL---\n",entry->d_name, process_name);
                }
		        else{
                    printf("[%s] %s ---PROCESO DE USUARIO---\n",entry->d_name, process_name);
                }
            }
        }
    }
    closedir(dir);
    return 0;
}
